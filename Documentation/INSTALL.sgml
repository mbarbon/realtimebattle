<!doctype linuxdoc system>

<notes>
<title></title>
Installation

<p>
Installing RealTimeBattle should not be too difficult; in case you get
problems, please send your bug report to 
<htmlurl name="realtimebattle@telia.com" url="mailto:realtimebattle@telia.com"> and
tell what went wrong.


To compile and install RealTimeBattle, you only need to execute the following commands:

<verb>
% ./configure [options]
% make
# make install</verb>

You can change the settings by supplying options to configure, e.g. if you want a
different install directory, compile in debug mode or turn off graphics or native
language supprt. A full list of options is listed by

<verb>
% ./configure --help
</verb>
The following options are especially useful:

<verb>
 --prefix=DIR              The root directory for all installed files, 
                            default: /usr
 --exec-prefix=DIR         Root for architecture-dependent files,
                            default: prefix
 --bindir=DIR              Where the RealTimeBattle binary is placed,
                            default: eprefix/bin
 --datadir=DIR             Where data is installed
                            default: prefix/share
 --includedir=DIR          Where Messagetypes.h is installed,
                            default: prefix/include
 --infodir=DIR             Where info-files are stored,
                            default: prefix/info
 --with-rtb-dir            Directory for main installation,
                            default: prefix/games/RealTimeBattle

 --disable-nls             do not use Native Language Support
 --with-included-gettext   use the GNU gettext library included here
 --with-nls-localedir=PATH directory where your locales are
                            default: datadir/locale

 --enable-debug          Compile for debugging
 --disable-graphics      Compile a version without a gui.
 --without-gtk           Same as --disable-graphics.
</verb>

The <tt>gtk</tt> options can be useful too.

Note that in order to install to directories other than your own, you have to be root.

If you need to supply extra flags to the c or c++ compiler, you can do this by
changing <tt>CFLAGS</tt> and <tt>CXXFLAGS</tt> respectively. For example, using bash,

<verb>
export CXXFLAGS=-Wall
</verb> 
will add '-Wall' when compiling a c++ program.

</notes>
